<?php

/**
 * @file
 * This is the file that provides a quick look to show the main Drupal hooks for presenting to sobre_ruedas
 *
 * @author Edwin Vega Moreno ('Developer Web Junior('Drupal')')
 */

module_load_include('inc', 'sobre_ruedas', 'includes/sr.callbacks');

/**
 * Implements hook_help().
 */
function sobre_ruedas_help($path, $arg) {
   switch ($path) {
     case 'admin/help#sobre_ruedas':
       return check_markup(file_get_contents( dirname(__FILE__) . "/README.txt") );
   }
}

/**
* Implements hook_menu().
*/
function sobre_ruedas_menu() {    
    $items['sobre_ruedas/redimir/%/%'] = array(
        'title' => 'Creation of node',
        'page callback' => '_sobre_ruedas_redeem_benefit',
        'access callback' => TRUE,
        'page arguments' => array(2,3),
        'type' => MENU_CALLBACK,
    );
    return $items;
}

/**
 * Implements hook_preprocess_node().
 */
function sobre_ruedas_preprocess_node(&$vars) {
    if(isset($vars['preprocess_fields'])){
        foreach ($vars['preprocess_fields'] as $field) {
            switch ($field) {
                case 'redeem':
                    global $user;
                    global $base_url;
                    $account = user_load($user->uid);
                    $authorize = _sobre_ruedas_authorize_redemption($account, $vars["node"]);
                    
                    if($authorize){
                        $query = new EntityFieldQuery();
                        $query->entityCondition('entity_type', 'node')
                            ->entityCondition('bundle', 'redemption')
                            ->propertyCondition('uid', $user->uid)
                            ->fieldCondition('field_benefits', 'target_id', $vars['node']->nid);

                        $result = $query->execute();

                        $text = t("Redeem");
                        $url = $base_url."/sobre_ruedas/redimir/".$vars['node']->nid.'/'.$user->uid;

                        if (isset($result['node'])) {
                            $url = '/'.drupal_get_path_alias('node/'.$vars["node"]->nid);
                            $text = t("View");
                        }
                        $vars[$field] = '<a class="button" href="'.$url.'">'.$text.'</a>';
                    }
                    break;
            }
        }
    }
}

/**
 * Implements hook_form_alter().
 */
function sobre_ruedas_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_login':
      $form['title'] = array('#markup' => t('Login to my account'));
      $form['title']['#weight'] = -1;
      $form['name']['#title'] = '';
      $form['pass']['#title'] = '';
      $form['name']['#description'] = '';
      $form['pass']['#description'] = '';
      $form['name']['#attributes']['placeholder'] = t( 'Identification card' );
      $form['pass']['#attributes']['placeholder'] = t( 'Password' );
      $form['actions']['submit']['#value'] = t('Enter');
      $form['link'] = array('#markup' => l(t('I forgot my password'),'/login/password/'));
      break;
    case 'user_pass':
      $form['name']['#title'] = '';
      $form['name']['#attributes']['placeholder'] = t( 'Email');
      $form['actions']['submit']['#value'] = t('Send me my password');
      break;
    //case 'views_exposed_form':
      //global $user;        
  }
}

/**
 * Implements hook_form_alter().
 */
function sobre_ruedas_entity_view_mode_alter(&$view_mode, $context){
  // For nodes, change the view mode when it is teaser.
  if ($context['entity_type'] == 'node' && $view_mode == 'benefits_list') {
    global $user;
    $node = $context['entity'];
    $is_surprise = field_get_items('node', $node, 'field_is_surprise_benefit');
    $account = user_load($user->uid);

    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'redemption')
        ->propertyCondition('uid', $user->uid)
        ->fieldCondition('field_benefits', 'target_id', $node->nid);

    $result = $query->execute();

    if($node->type == 'benefit' && $is_surprise && $is_surprise[0]['value'] == 1 && !isset($result['node'])){
      $view_mode = 'surprise_benefit';
    }
  }
}